# File created using '.gitignore Generator' for Visual Studio Code: https://bit.ly/vscode-gig

# Created by https://www.toptal.com/developers/gitignore/api/macos,fortran,jupyternotebooks,pycharm,pydev,python
# Edit at https://www.toptal.com/developers/gitignore?templates=macos,fortran,jupyternotebooks,pycharm,pydev,python

# Test workspace for SPARTACUS layer issues
spartacus_test_workspace/

### Fortran ###
# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

### JupyterNotebooks ###
# gitignore template for Jupyter Notebooks
# website: http://jupyter.org/

.ipynb_checkpoints
*/.ipynb_checkpoints/*

# IPython
profile_default/
ipython_config.py

# Remove previous ipynb_checkpoints
#   git rm -r .ipynb_checkpoints/

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### PyCharm ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

### PyCharm Patch ###
# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Sonarlint plugin
# https://plugins.jetbrains.com/plugin/7973-sonarlint
.idea/**/sonarlint/

# SonarQube Plugin
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
.idea/**/sonarIssues.xml

# Markdown Navigator plugin
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
.idea/**/markdown-navigator.xml
.idea/**/markdown-navigator-enh.xml
.idea/**/markdown-navigator/

# Cache file creation bug
# See https://youtrack.jetbrains.com/issue/JBR-2257
.idea/$CACHE_FILE$

# CodeStream plugin
# https://plugins.jetbrains.com/plugin/12206-codestream
.idea/codestream.xml

### pydev ###
.pydevproject

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
pytestdebug.log

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
doc/_build/

# PyBuilder
target/

# Jupyter Notebook

# IPython

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
.venv-*
env/
venv/
ENV/
env.bak/
venv.bak/
pythonenv*

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# profiling data
.prof

# End of https://www.toptal.com/developers/gitignore/api/macos,fortran,jupyternotebooks,pycharm,pydev,python

# Custom rules (everything added below won't be overriden by 'Generate .gitignore File' if you use 'Update' option)

.idea/
_build/
doxygenoutput/
Release/bin/
Release/*.zip
supy-driver/wheelhouse/
test-dev/
test/BaseRun/*/SUEWS_V2*
src/suews/SUEWS_V20*
src/Release/
src/suews/bin/*

# test diff files
*.diff.csv

# junk files during complilations
fort.1
problems.txt

# local settings
.vscode/
log.test
test/fortran-notebook/test-fortran.ipynb
# Test/BaseRun/2021a/Output/
test/code/quick-test.py
.fortls

# temporary test files
test/BaseRun/2021a-gridlayout/
test/meg/
suews_ctrl_ver.f95
supy-driver/supy_driver/version.py
wheelhouse/
src/supy/wheelhouse/
dev-test/
SuPy.log
SuPy.log.*

# auto-generated version info file
_version_scm.py

# a quick test file using jupyter notebook
test/test.ipynb
**/supy/api/supy.util/
*.tmp

# Word temporary
~$*.doc*

# Word Auto Backup File
Backup of *.doc*

# Excel temporary
~$*.xls*

# Excel Backup File
*.xlk

# PowerPoint temporary
~$*.ppt*

# Visio autosave temporary files
*.~vsd*

# supy-driver wrapper
src/supy/supy/supy_driver.py
src/supy_driver/supy_driver.py

# debug files
supy_debug*.zip
df_forcing.pkl
df_state_init.pkl
supy_info.json
src/supy_driver/build_dir
src/supy_driver/log.build
log.build
save-AVL_6_vars273/
AVL_*_vars*
schema/dev/df_state_test.pkl
schema/df_state_test.pkl
error_info.md
schema/dev/config-suews-output.yml
schema/dev/convert-yml-df.ipynb
file_list.txt
data_met_raw.pkl
test-quick.py
data_met_raw.pkl
test-quick.py
df_water*.pkl
quick-test.ipynb

# Build output
docs/build/
docs/source/_static/suews-config-ui/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# vitepress build output
**/.vitepress/dist

# vitepress cache directory
**/.vitepress/cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
supy_input_dict_*.pkl
quick-test-script.py

# binary files
SUEWS_V20*

# quick test script
quick-test.py

# Claude Code configuration and workspace
# Only ignore local settings and truly temporary files
.claude/settings.local.json
.claude/workspace/temp-*

# auto-generated files for building docs
docs/schema.json

# SPARTACUS surface - these are copied/generated files from submodule
src/suews/ext_lib/spartacus-surface/**/*.f95

# Tutorial output files - generated when running notebooks
docs/source/tutorials/python/*_BEERS_*.txt
docs/source/tutorials/python/*_DailyState.txt
docs/source/tutorials/python/*_debug_*.txt
docs/source/tutorials/python/*_EHC_*.txt
docs/source/tutorials/python/*_RSL_*.txt
docs/source/tutorials/python/*_SUEWS_*.txt
docs/source/tutorials/python/df_state.csv

# Auto-generated Sphinx API documentation
docs/source/_autosummary/

# Auto-generated RST files from data model
docs/source/inputs/yaml/config-reference/*.rst


# Git worktrees directory for Claude Code access
worktrees/
test/precheck_testcase/run_precheck_testcase.py
test/precheck_testcase/precheck_testcase.py

# uv lockfile - for flexible dependency resolution
uv.lock

src/supy/data_model/avg_temp/cru_ts4.06.1901.2021.tmp.dat.nc.gz

# Test files from CRU data development
temp_test.feather
temp_test.npz
PR561_logic_analysis.md

# Debug files from suews-convert
debug_conversion/
df_code0.pkl

# Benchmark repository for testing
test/benchmark_repo/

# Test files from CRU data development
temp_test.feather
temp_test.npz

# CLAUDE.md protection
CLAUDE.md.backup
.claude/snapshots/

# Generated JSON Schemas (published to GitHub Pages, not stored in repo)
schemas/v*/
schemas/latest
public/
local-schema/

# Temporary schema exports
*.schema.json

# Temporary schema export directory
public/
