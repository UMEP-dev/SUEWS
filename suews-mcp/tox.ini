[tox]
envlist = py{39,310,311,312}, lint, type-check, coverage
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run tests with pytest
deps = 
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
commands = pytest {posargs:tests}

[testenv:py39]
description = Test with Python 3.9
basepython = python3.9

[testenv:py310]  
description = Test with Python 3.10
basepython = python3.10

[testenv:py311]
description = Test with Python 3.11
basepython = python3.11

[testenv:py312]
description = Test with Python 3.12
basepython = python3.12

[testenv:lint]
description = Run linting with ruff and black
deps = 
    ruff>=0.1.0
    black>=23.0.0
commands = 
    ruff check src tests
    black --check --diff src tests

[testenv:format]
description = Format code with black and ruff
deps = 
    ruff>=0.1.0  
    black>=23.0.0
commands =
    black src tests
    ruff check --fix src tests

[testenv:type-check]
description = Run type checking with mypy
deps = 
    mypy>=1.0.0
    types-pyyaml>=6.0.0
    # Include test dependencies for complete type checking
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
commands = mypy src tests

[testenv:coverage]
description = Generate test coverage report
deps = 
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
commands = 
    pytest --cov=suews_mcp --cov-report=term --cov-report=html --cov-report=xml tests

[testenv:integration]
description = Run integration tests only
deps = 
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
commands = pytest {posargs:tests/integration tests/e2e}

[testenv:performance]
description = Run performance tests
deps = 
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
    pytest-benchmark>=4.0.0
commands = pytest {posargs:tests/performance}

[testenv:build]
description = Build the package
deps = 
    build>=0.10.0
    twine>=4.0.0
commands = 
    python -m build
    twine check dist/*

[testenv:docs]
description = Build documentation
changedir = docs
deps = 
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
    myst-parser>=2.0.0
commands = sphinx-build -b html . _build/html

[testenv:clean]
description = Clean build artifacts
deps = 
allowlist_externals = 
    rm
    find
commands = 
    rm -rf build/
    rm -rf dist/
    rm -rf *.egg-info/
    find . -name "*.pyc" -delete
    find . -name "__pycache__" -delete

# Configuration for pytest
[pytest]
testpaths = tests
asyncio_mode = auto
addopts = 
    -ra 
    -q 
    --strict-markers
    --tb=short

# Configuration for coverage
[coverage:run]
source = src/suews_mcp
omit = 
    */tests/*
    */test_*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod