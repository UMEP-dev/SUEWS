name: Auto-Format Code

# Manual trigger for formatting code when needed
on:
  workflow_dispatch:
    inputs:
      format_python:
        description: 'Format Python code with ruff'
        required: false
        default: true
        type: boolean
      format_fortran:
        description: 'Format Fortran code with fprettify'
        required: false
        default: true
        type: boolean

# Prevent concurrent runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  auto-format:
    name: Auto-Format Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Cache formatting tools
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-format-tools-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-format-tools-
            
      - name: Install formatting tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff fprettify
          
      - name: Format Python code
        if: ${{ inputs.format_python }}
        run: |
          echo "Formatting Python code with ruff..."
          ruff format .
          
      - name: Format Fortran code
        if: ${{ inputs.format_fortran }}
        run: |
          if ls src/suews/src/*.f95 >/dev/null 2>&1; then
            echo "Formatting Fortran code with fprettify..."
            fprettify src/suews/src/*.f95 -c .fprettify.yml
          else
            echo "No Fortran files found to format"
          fi
          
      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No formatting changes needed"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Formatting changes detected"
          fi
          
      - name: Commit formatting changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "style: auto-format code

          - Python formatting with ruff: ${{ inputs.format_python }}
          - Fortran formatting with fprettify: ${{ inputs.format_fortran }}
          
          Triggered manually via workflow_dispatch"
          git push
          
      - name: Generate job summary
        run: |
          echo "## Auto-Format Results" >> $GITHUB_STEP_SUMMARY
          echo "- Python formatting: ${{ inputs.format_python && '✅ Enabled' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Fortran formatting: ${{ inputs.format_fortran && '✅ Enabled' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Changes detected: ${{ steps.changes.outputs.has_changes && '✅ Yes' || '❌ No' }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
            echo "- **Result**: Code formatted and committed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Result**: Code already properly formatted" >> $GITHUB_STEP_SUMMARY
          fi