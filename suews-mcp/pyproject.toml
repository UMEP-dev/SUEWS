[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[project]
name = "suews-mcp"
dynamic = ["version"]
description = "Model Context Protocol (MCP) server for SUEWS urban climate model"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "SUEWS Development Team", email = "sunt05@gmail.com"},
]
maintainers = [
    {name = "Ting Sun", email = "sunt05@gmail.com"},
]
keywords = [
    "mcp", 
    "suews", 
    "urban climate", 
    "model context protocol",
    "urban meteorology",
    "energy balance",
    "surface flux",
    "climate modeling"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications",
    "Environment :: Console",
]

dependencies = [
    "mcp>=1.0.0",
    "supy>=2024.12.16",
    "pydantic>=2.0.0,<3.0.0",
    "typing-extensions>=4.0.0",
    "pyyaml>=6.0.0",
    "numpy>=1.20.0",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=2.0.0",
]
all = [
    "suews-mcp[dev,test,docs]",
]

[project.urls]
Homepage = "https://github.com/UMEP-dev/SUEWS"
Documentation = "https://suews.readthedocs.io/"
Repository = "https://github.com/UMEP-dev/SUEWS.git"
Issues = "https://github.com/UMEP-dev/SUEWS/issues"

[project.scripts]
suews-mcp = "suews_mcp.server:main"

[tool.hatch.version]
path = "src/suews_mcp/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/suews_mcp"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"