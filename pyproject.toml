[build-system]
requires = [
    "wheel",
    "f90wrap==0.2.16",
    "numpy>=2.0",
    "meson-python>=0.12.0",
]
build-backend = 'mesonpy'

[project]
name = "supy"
description = "The SUEWS model that speaks Python"
authors = [
    { name = "Dr Ting Sun", email = "ting.sun@ucl.ac.uk" },
]
dynamic = ["version"]
requires-python = ">=3.9"
license = { text = "GPL-V3.0" }
readme = "README.md"

# Core runtime dependencies only
dependencies = [
    # Data processing
    "pandas",
    "numpy>=2.0",
    "scipy",
    "xarray",
    "dask",
    
    # Model requirements
    "pydantic",
    "f90nml",
    
    # Utilities
    "matplotlib",
    "seaborn",
    "chardet",
    "click",
    "pyarrow>=20,<21; python_version < '3.14' and platform_system == 'Linux'",  # Linux needs manylinux2014 wheels on CPython 3.9-3.13
    "pyarrow>=20; python_version < '3.14' and platform_system != 'Linux'",  # Non-Linux platforms may use newer pyarrow binaries
    "pyarrow>=22; python_version >= '3.14'",  # 22.x provides cp314 wheels on manylinux_2_28/macOS/Windows

    # Scientific packages
    "atmosp",
    "scikit-learn",
    
    # Optimization
    "lmfit",
    "numdifftools",
    "platypus-opt==1.0.4",
    
    # Data access
    "cdsapi",
    
    # Time/location
    "tzfpy>=1.0.0",  # Faster timezone finder with Windows wheels
    "pytz",
    
    # Parallel processing
    "multiprocess",
    
    # Schema validation (for YAML configs)
    "jsonschema",
    "rich",
]

classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]

[project.optional-dependencies]
# TMY/EPW generation support (requires pvlib which depends on h5py)
tmy = [
    "pvlib",
]

# Single dev group combining test + development tools
dev = [
    # Testing
    "pytest",
    "pytest-cov",
    
    # Code formatting
    "ruff",
    "fprettify",
    
    # Development
    "ipykernel",
    
    # Documentation - Essential only (based on conf.py usage)
    "sphinx>=4.0,<8.2",
    "sphinx-autobuild",
    "sphinx-book-theme",        # Active theme in conf.py
    "nbsphinx",                 # Jupyter notebook support
    "recommonmark",             # Markdown support
    "pybtex",                   # Bibliography processing
    "sphinxcontrib.bibtex~=2.4", # Bibliography support (heavily customised)
    "sphinx-panels",            # Panel layouts
    "sphinx-design",            # Collapsible sections for YAML config docs
    "sphinx-last-updated-by-git", # Git info in docs
    "sphinx-click",             # CLI documentation
    "sphinx_comments",          # Comments (may be re-enabled)
    "docutils>=0.16,<0.17",     # Version pinned for compatibility
    "jinja2>=3.0,<3.1",         # Version pinned for compatibility
]

[project.scripts]
suews-run = "supy.cmd.SUEWS:SUEWS"
suews-convert = "supy.cmd.table_converter:convert_table_cmd"
suews-validate = "supy.cmd.validate_config:main"
suews-schema = "supy.cmd.schema_cli:main"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::UserWarning:pydantic.main",
]
# Test markers
markers = [
    "slow: marks tests as slow (e.g., Fortran state persistence tests taking ~3-4 minutes)",
]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
